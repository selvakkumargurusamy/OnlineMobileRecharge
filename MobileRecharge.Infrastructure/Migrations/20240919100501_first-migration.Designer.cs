// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileRecharge.Infrastructure.Database;

#nullable disable

namespace MobileRecharge.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240919100501_first-migration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobileRecharge.Domain.Models.Beneficiarie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Beneficiaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            NickName = "Selva",
                            PhoneNumber = "+971-70-39380474",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            NickName = "Kumar",
                            PhoneNumber = "+971-70-30666969",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.RechargeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeneficiaryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("RechargeAmount")
                        .HasColumnType("int");

                    b.Property<int>("ServiceCharge")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("UserId");

                    b.ToTable("RechargeTransactions");
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "selva@gmail.com",
                            FirstName = "Selva",
                            IsVerified = true,
                            LastName = "Kumar"
                        });
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.UserBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserBalances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 5000,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.Beneficiarie", b =>
                {
                    b.HasOne("MobileRecharge.Domain.Models.User", "User")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.RechargeTransaction", b =>
                {
                    b.HasOne("MobileRecharge.Domain.Models.Beneficiarie", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobileRecharge.Domain.Models.User", "User")
                        .WithMany("RechargeTransactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Beneficiary");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.UserBalance", b =>
                {
                    b.HasOne("MobileRecharge.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MobileRecharge.Domain.Models.User", b =>
                {
                    b.Navigation("Beneficiaries");

                    b.Navigation("RechargeTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
